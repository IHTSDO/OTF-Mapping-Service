
'use strict';

angular.module('mapProjectApp.widgets.report', ['adf.provider'])
.config(function(dashboardProvider){
	dashboardProvider
	.widget('report', {
		title: 'Reports',
		description: 'Displays requested reports',
		controller: 'reportCtrl',
		templateUrl: 'js/widgets/report/report.html',
		edit: {}
	});
}).controller('reportCtrl', function($scope, $rootScope, $http, $location, $modal, $sce, localStorageService){

	// initialize as empty to indicate still initializing database connection
	$scope.currentUser = localStorageService.get('currentUser');
	$scope.currentRole = localStorageService.get('currentRole');
	$scope.focusProject = localStorageService.get('focusProject');
	
	// datepicker formats
	$scope.format = 'yyyy/MM/dd';
	$scope.startDateOpened = false;
	$scope.endDateOpened = false;
	
	// select options
	$scope.report = {};
	$scope.reportTypes = ['SPECIALIST_PRODUCTIVITY'];
	$scope.queryTypes = ['LUCENE', 'SQL', 'HQL'];

	
	// watch for project change
	$scope.$on('localStorageModule.notification.setFocusProject', function(event, parameters) { 	
		console.debug("MapProjectWidgetCtrl:  Detected change in focus project");
		$scope.focusProject = parameters.focusProject;
	});	
	

	// on any change of focusProject, set headers
	$scope.currentUserToken = localStorageService.get('userToken');
	$scope.$watch(['focusProject', 'currentUser', 'userToken'], function() {

		
		if ($scope.focusProject != null && $scope.currentUser != null && $scope.currentUserToken != null) {
			$http.defaults.headers.common.Authorization = $scope.currentUserToken;		
		}
	});
	
	
	$scope.addReport = function() {
		
		// set the columns not added by form
		$scope.report.active = true;
		$scope.report.autoGenerated = false;
		$scope.report.owner = $scope.currentUser;
		$scope.report.mapProjectId = $scope.focusProject.id;
		
		$rootScope.glassPane++;
		
		// obtain the record
		$http({
			url: root_reporting + "report/add",
			dataType: "json",
			data: $scope.report,
			method: "POST",
			headers: { "Content-Type": "application/json"}	
		}).success(function(data) {
			$rootScope.glassPane--;
			$scope.report = null;
		}).error(function(data, status, headers, config) {
			$rootScope.glassPane--;
			$scope.report = null;
		    $rootScope.handleHttpError(data, status, headers, config);
		});
	};
	
	$scope.retrieveReports = function() {
		$rootScope.glassPane++;
		
		// obtain the record
		$http({
			url: root_reporting + "report/reports",
			dataType: "json",
			method: "GET",
			headers: { "Content-Type": "application/json"}	
		}).success(function(data) {
			$rootScope.glassPane--;
			console.debug(data);
			$scope.reports = data.Report;
		}).error(function(data, status, headers, config) {
			$rootScope.glassPane--;
			$scope.reports = null;
		    $rootScope.handleHttpError(data, status, headers, config);
		});
	};
	

   
});
