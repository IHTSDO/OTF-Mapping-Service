<?xml version="1.0"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <!-- Module Metadata -->
  <parent>
    <groupId>org.ihtsdo.otf.mapping</groupId>
    <artifactId>mapping-parent</artifactId>
    <version>1.7.59-SNAPSHOT</version>
    <relativePath>../parent</relativePath>
  </parent>

  <artifactId>mapping-rest-us</artifactId>
  <packaging>war</packaging>
  <name>OTF RF2 REST Services</name>

  <properties>
    <execFinalName>exec-${project.build.finalName}.jar</execFinalName>
    <!--  <packageName>${project.parent.artifactId}-rest</packageName> -->
    <packageName>mapping-service-us</packageName>
    <stdpackageName>mapping-service</stdpackageName>

    <!-- Specify the config artifact parameters -->
    <config.groupId>org.ihtsdo.otf.mapping</config.groupId>
    <config.artifactId>mapping-config-nlm</config.artifactId>
    <config.version>${releaseVersion}</config.version>


		<tomcat9-maven-plugin-version>2.2</tomcat9-maven-plugin-version>
		<jdeb.version>1.1.1</jdeb.version>
		<<webapp-runner.version>9.0.89.0</webapp-runner.version>


  </properties>

  <dependencies>

    <!-- Servlet API, provided by container -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Model interfaces. -->
    <dependency>
      <groupId>org.ihtsdo.otf.mapping</groupId>
      <artifactId>mapping-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.ihtsdo.otf.mapping</groupId>
      <artifactId>mapping-jpa-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.ihtsdo.otf.mapping</groupId>
      <artifactId>mapping-services</artifactId>
    </dependency>
    <dependency>
      <groupId>org.ihtsdo.otf.mapping</groupId>
      <artifactId>mapping-jpa-services</artifactId>
    </dependency>
    <dependency>
      <groupId>org.ihtsdo.otf.mapping</groupId>
      <artifactId>mapping-reports</artifactId>
    </dependency>

    <!-- JPA dependencies -->
    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-envers</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-search</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>
    <dependency>
      <groupId>com.mysql</groupId>
      <artifactId>mysql-connector-j</artifactId>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-reload4j</artifactId>
    </dependency>

    <!-- Required for Jersey and JSON -->
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jersey2-jaxrs</artifactId>
    </dependency>

	<dependency>
	  <groupId>software.amazon.awssdk</groupId>
	  <artifactId>s3</artifactId>
	</dependency>

    <!-- Sending email -->
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
    </dependency>
  </dependencies>

  <build>

    <!-- Artifact final name -->
    <finalName>${project.artifactId}</finalName>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${config.groupId}</groupId>
                  <artifactId>${config.artifactId}</artifactId>
                  <version>${config.version}</version>
                  <type>zip</type>
                  <outputDirectory>${project.build.directory}/config/resources</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Configure .war build -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warName>mapping-rest</warName>
          <attachClasses>true</attachClasses>
          <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
          <webResources>
            <resource>
              <directory>${project.build.directory}/config/resources</directory>
              <!-- avoid unnecessary stuff -->
              <excludes>
                <exclude>bin/**</exclude>
                <exclude>config*.properties</exclude>
              </excludes>
            </resource>
            <resource>
              <directory>src/main/webapp</directory>
              <filtering>true</filtering>
              <includes>
                <include>js/appConfig.js</include>
              </includes>
            </resource>
            <resource>
              <directory>src/main/webapp</directory>
              <filtering>false</filtering>
              <excludes>
                <exclude>js/appConfig.js</exclude>
              </excludes>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <!-- Executable tomcat war file and debian build -->
      <!--  <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>${tomcat7-maven-plugin-version}</version>
        <executions>
          <execution>
            <id>tomcat-run</id>
            <goals>
              <goal>exec-war-only</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <path>/mapping-rest</path>
              <finalName>exec-${project.build.finalName}.jar</finalName>
              <enableNaming>true</enableNaming>
              <serverXml>/opt/${packageName}/conf/server.xml</serverXml>
              <contextFile>/opt/${packageName}/conf/context.xml</contextFile>
            </configuration>
          </execution>
        </executions>
      </plugin> -->
      <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.3</version>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals><goal>copy</goal></goals>
                    <configuration>
                        <artifactItems>
                            <artifactItem>
                                <groupId>com.heroku</groupId>
                                <artifactId>webapp-runner</artifactId>
                                <version>${webapp-runner.version}</version>
                                <destFileName>webapp-runner.jar</destFileName>
                            </artifactItem>
                        </artifactItems>
                    </configuration>
                </execution>
            </executions>
        </plugin>
      <plugin>
        <groupId>org.vafer</groupId>
        <artifactId>jdeb</artifactId>
        <version>${jdeb.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jdeb</goal>
            </goals>
            <configuration>
              <deb>${project.build.directory}/${packageName}-${releaseVersion}.deb</deb>
              <controlDir>${basedir}/src/deb/control</controlDir>
              <snapshotExpand>true</snapshotExpand>
              <snapshotEnv>BUILD_NUMBER</snapshotEnv>
              <verbose>true</verbose>
              <classifier>all</classifier>
              <signPackage>false</signPackage>
              <dataSet>
               <!--  <data>
                  <src>${project.build.directory}/${execFinalName}</src>
                  <dst>app.jar</dst>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/opt/${packageName}/lib</prefix>
                  </mapper>
                </data>  -->
                <data>
                  <src>${project.build.directory}/dependency/webapp-runner.jar</src>
                  <dst>webapp-runner.jar</dst>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/opt/${stdpackageName}/lib</prefix>
                  </mapper>
                </data>
                <data>
                  <src>${project.build.directory}/mapping-rest.war</src>
                  <dst>mapping-rest.war</dst>
                  <type>file</type>
                  <mapper>
                    <type>perm</type>
                    <prefix>/opt/${stdpackageName}/lib</prefix>
                  </mapper>
                </data>
                <data>
                  <src>${basedir}/src/deb/supervisor.conf</src>
                  <dst>/etc/supervisor/conf.d/${stdpackageName}.conf</dst>
                  <type>file</type>
                  <conffile>true</conffile>
                </data>
                <data>
                  <src>${basedir}/src/deb/config.properties</src>
                  <dst>/etc/opt/${stdpackageName}/config.properties</dst>
                  <type>file</type>
                  <conffile>true</conffile>
                  <mapper>
                    <type>perm</type>
                    <group>${stdpackageName}</group>
                    <filemode>0640</filemode>
                  </mapper>
                </data>
                <data>
                  <src>${basedir}/src/deb/tomcat/context.xml</src>
                  <dst>/opt/${stdpackageName}/conf/context.xml</dst>
                  <type>file</type>
                 <!--  <conffile>true</conffile> -->
                  <mapper>
                    <type>perm</type>
                    <group>${stdpackageName}</group>
                    <filemode>0640</filemode>
                  </mapper>
                </data>
                <data>
                  <src>${basedir}/src/deb/tomcat/server.xml</src>
                  <dst>/opt/${stdpackageName}/conf/server.xml</dst>
                  <type>file</type>
                 <!--  <conffile>true</conffile> -->
                  <mapper>
                    <type>perm</type>
                    <group>${stdpackageName}</group>
                    <filemode>0640</filemode>
                  </mapper>
                </data>
                <data>
                  <type>template</type>
                  <paths>
                    <path>/etc/opt/${stdpackageName}</path>
                    <path>/opt/${stdpackageName}</path>
                  </paths>
                </data>
                <data>
                  <type>template</type>
                  <paths>
                    <path>/var/opt/${stdpackageName}</path>
                    <path>/var/opt/${stdpackageName}/run</path>
                    <path>/var/opt/${stdpackageName}/logs</path>
                    <path>/opt/${stdpackageName}</path>
                    <path>/opt/${stdpackageName}/run</path>
                    <path>/opt/${stdpackageName}/logs</path>
                    <path>/opt/tomcat8/logs</path>
                    <!-- <path>/var/cache/tomcat7</path> -->
                    <path>/opt/tomcat8</path>
                    <path>/opt/tomcat8/indexes/lucene/indexes</path>
                  </paths>
                  <mapper>
                    <type>perm</type>
                    <user>${stdpackageName}</user>
                    <group>${stdpackageName}</group>
                    <dirmode>0750</dirmode>
                    <filemode>0750</filemode>
                  </mapper>
                </data>
                <data>
                  <type>link</type>
                  <linkName>/var/log/${stdpackageName}</linkName>
                  <linkTarget>/var/opt/${stdpackageName}/log</linkTarget>
                  <symlink>true</symlink>
                </data>
                <!-- Moved to ansible, kept for reference <data> <src>${basedir}/..</src>
                  <type>directory</type> <mapper> <type>perm</type> <prefix>/opt/${stdpackageName}/lib/admin</prefix>
                  </mapper> </data> -->
                <!-- <data> <src>${basedir}/src/deb/log4j.xml</src> <dst>/etc/opt/${stdpackageName}/log4j.xml</dst>
                  <type>file</type> <conffile>true</conffile> <mapper> <type>perm</type> <group>${stdpackageName}</group>
                  <filemode>0640</filemode> </mapper> </data> -->
              </dataSet>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

    <!-- Distribution management -->
  <distributionManagement>
    <repository>
      <id>ihtsdo-public-nexus</id>
      <name>IHTSDO Public Nexus Releases</name>
      <url>https://nexus.ihtsdotools.org/content/repositories/releases/</url>
    </repository>
    <snapshotRepository>
      <id>ihtsdo-public-nexus</id>
      <name>IHTSDO Public Nexus Snapshots</name>
      <url>https://nexus.ihtsdotools.org/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>
</project>
